#!/bin/bash

# A shell script to interface with tuningFork.c

helpMenu() {
# prints helpMenu output
cat >&2 << HELPMESSAGE
Usage: tune [OPTION]...

Creates a .wav file with single frequency

OPTIONS:
  -f                specify frequency (default = 440Hz)
  -d                specify time duration (default = 10s)
  -n                specify file name (default = A440.wav)
  -p                play the .wav file (requires VLC)
  -h, --help        display this help menu
HELPMESSAGE
} # call exit(1) after function call

# Default values
freq=440
duration=10
fname="A440.wav"

if [[ ! -f tf ]]; then # create the executable file
  make
  if [[ $? != 0 ]]; then # failed compilation
    echo "Compilation of tuningFork.c failed"
    echo "Exiting with status (1)"
    exit 1
  fi
fi

# ./tf executable should exist

if [ "$1" == "--help" ]; then
  helpMenu # function call
  exit 0
fi
# possibly change variables

play_file=false

while getopts "hf:d:n:p" OPTION; do
  case $OPTION in
    h)
      helpMenu
      exit 0
      ;;
    f) # change frequency
      freq=$OPTARG
      ;;
    d) # set to overwrite mode
      duration=$OPTARG
      ;;
    n)
      fname=$OPTARG
      ;;
    p)
      play_file=true
      ;;
    ?)
      helpMenu # call funciton
      exit 1
      ;;
  esac
done



# output variables to stdout piped to ./tf
echoString="${freq}\n${duration}\n${fname}\n"

# -en interprets escape sequences and ensures only 1 newline at end
# redirect output to black hole
echo -en "${echoString}" | ./tf >/dev/null

if [[ "${play_file}" == "true" ]]; then
  # vlc will play these "files" in order. "vlc://quit" is a special instruction
  # to exit once we reach this item in the list. Otherwise vlc will stay open
  # but not do anything.
  cvlc "${fname}" "vlc://quit"
fi

exit 0
