#!/bin/bash

# A shell script to interface with tuningFork.c

helpMenu() {
# prints helpMenu output
cat >&2 << HELPMESSAGE
Usage: tune [OPTION]...

Creates a .wav file with single frequency

OPTIONS:
  -f {NUM}          specify frequency (default = 440Hz)
  -d {NUM}          specify time duration (default = 10s)
  -n {FILE}         specify file name (default = A440.wav)
  -p                play the .wav file (requires VLC)
  -c {left,right}   specify only left or right channel (default = both)
  -h, --help        display this help menu
HELPMESSAGE
} # call exit(1) after function call

# Default values
freq=440
duration=10
fname="A440.wav"

if [[ ! -f tf ]]; then # create the executable file
  make
  if [[ $? != 0 ]]; then # failed compilation
    echo "Compilation of tuningFork.c failed"
    echo "Exiting with status (1)"
    exit 1
  fi
fi

# ./tf executable should exist

if [ "$1" == "--help" ]; then
  helpMenu # function call
  exit 0
fi
# possibly change variables

play_file="false"
channel="both"

while getopts "hf:d:n:c:p" OPTION; do
  case $OPTION in
    h)
      helpMenu
      exit 0
      ;;
    f) # change frequency
      freq=$OPTARG
      ;;
    d) # set to overwrite mode
      duration=$OPTARG
      ;;
    n)
      fname=$OPTARG
      ;;
    p)
      play_file="true"
      ;;
    c)
      channel="$OPTARG"
      ;;
    ?)
      helpMenu
      exit 1
      ;;
  esac
done

tuning_fork_args=()
tuning_fork_args+=(-f "${freq}")
tuning_fork_args+=(-d "${duration}")
tuning_fork_args+=(-n "${fname}")
tuning_fork_args+=(-c "${channel}")

./tf "${tuning_fork_args[@]}" >/dev/null

if [[ "${play_file}" == "true" ]]; then
  # vlc will play these "files" in order. "vlc://quit" is a special instruction
  # to exit once we reach this item in the list. Otherwise vlc will stay open
  # but not do anything.
  cvlc "${fname}" "vlc://quit"
fi

exit 0
